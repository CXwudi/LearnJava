<configuration debug="false"> <!-- debug="true" here will print out logger info when logger get setup -->
  
  <!-- setting of either using logger name or autogenerated class name -->
  <property name="loggerName" value="logger"/> <!-- logger = class name passed into logger, class = class name that invoke logger -->
  
  <!-- layout (formatter) -->
  <property name="visierLoggerFormat" value="%date{HH:mm:ss.SSS} [%thread] %-5level %${loggerName}{10} - %msg%n" />
  
  <!-- current favorite formatter -->
  <property name="myCurrentBestFormatter" value="${visierLoggerFormat}"></property> <!-- go under all other properties, otherwise can't find it -->

  <!-- appenders (handlers) -->
  <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
    <filter class="ch.qos.logback.core.filter.EvaluatorFilter">
      <evaluator> <!-- defaults to type ch.qos.logback.classic.boolex.JaninoEventEvaluator -->
        <expression>return level &lt; WARN;</expression>
      </evaluator>
      <OnMismatch>DENY</OnMismatch>
      <OnMatch>NEUTRAL</OnMatch>
    </filter>
    <encoder> <!-- By default, this contains an element of class="ch.qos.logback.classic.encoder.PatternLayoutEncoder"-->
    <!-- anthor encoder is LayoutWrappingEncoder -->
      <pattern>${myCurrentBestFormatter}</pattern>
    </encoder>
  </appender>
  
  <appender name="STDERR" class="ch.qos.logback.core.ConsoleAppender">
    <target>System.err</target>
    <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
      <level>WARN</level>
    </filter>
    <encoder> 
      <pattern>${myCurrentBestFormatter}</pattern>
    </encoder>
  </appender>
  

  <!-- global logger setup-->
  <root level="trace">
    <appender-ref ref="STDOUT" /> 
    <appender-ref ref="STDERR" />
  </root>
</configuration>